plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
}

android {
    namespace 'co.mbznetwork.storyapp'
    compileSdk 33

    flavorDimensions("env")

    defaultConfig {
        applicationId "co.mbznetwork.storyapp"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_BASE_URL", "\"https://story-api.dicoding.dev/v1/\""
        buildConfigField "boolean", "RANDOMIZE_LOCATION", localProperties['USE_RANDOMIZE_LOCATION'] ?: "false"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-opt-in=kotlin.RequiresOptIn"]
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Activity
    implementation "androidx.activity:activity-ktx:$activity_ktx"

    // Fragment
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor"
    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"

    // GSON
    implementation "com.google.code.gson:gson:$gson"

    // DataStore
    implementation "androidx.datastore:datastore-preferences:$datastore_version"

    // Swipe Refresh Layout
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefresh"

    // Timber
    implementation "com.jakewharton.timber:timber:$timber"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-paging:$room_version"

    // Paging3
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    // Google Maps
    implementation "com.google.android.gms:play-services-maps:$google_maps"

    // Location
    implementation "com.google.android.gms:play-services-location:$play_services_location"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}